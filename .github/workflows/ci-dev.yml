name: 'CI-dev'

on:
  push:
    branches: [ "dev" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform CI'
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: dev
      TF_VAR_project_id: ${{ vars.DEV_PROJECT_ID }}
      TF_VAR_region: ${{ vars.DEV_REGION }}
      TF_VAR_zone: ${{ VARS.DEV_ZONE }}
      TF_VAR_bucket_name: ${{ vars.DEV_BUCKET_NAME }}
      TF_VAR_project_name: ${{ vars.DEV_project_name }}
      TF_VAR_db_tier: ${{ vars.DEV_DB_TIER }}
      TF_VAR_db_name: ${{ vars.DEV_DB_NAME }}
      TF_VAR_db_user: ${{ vars.DEV_DB_USER }}
      TF_VAR_db_password: ${{ secrets.DEV_DB_PASSWORD }}
      GOOGLE_CREDENTIALS: ${{ secrets.DEV_GOOGLE_CREDENTIALS }} 


    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.9.8"

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: Post Format
      if: always() && github.ref != 'refs/heads/master' && (steps.fmt.outcome == 'success' || steps.fmt.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          commenter_type: fmt
          commenter_input: ${{ format('{0}{1}', steps.fmt.outputs.stdout, steps.fmt.outputs.stderr) }}
          commenter_exitcode: ${{ steps.fmt.outputs.exitcode }}        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ env.GOOGLE_CREDENTIALS }} 

    - name: Post Init
      if: always() && github.ref != 'refs/heads/master' && (steps.init.outcome == 'success' || steps.init.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          commenter_type: init
          commenter_input: ${{ format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) }}
          commenter_exitcode: ${{ steps.init.outputs.exitcode }}

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      env:
        GOOGLE_CREDENTIALS: ${{ env.GOOGLE_CREDENTIALS }}

    - name: Post Plan
      if: always() && github.ref != 'refs/heads/master' && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}